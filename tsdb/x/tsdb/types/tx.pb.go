// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tsdb/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateTimeseries struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Signal   string `protobuf:"bytes,3,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (m *MsgCreateTimeseries) Reset()         { *m = MsgCreateTimeseries{} }
func (m *MsgCreateTimeseries) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimeseries) ProtoMessage()    {}
func (*MsgCreateTimeseries) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{0}
}
func (m *MsgCreateTimeseries) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimeseries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimeseries.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimeseries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimeseries.Merge(m, src)
}
func (m *MsgCreateTimeseries) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimeseries) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimeseries.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimeseries proto.InternalMessageInfo

func (m *MsgCreateTimeseries) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTimeseries) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MsgCreateTimeseries) GetSignal() string {
	if m != nil {
		return m.Signal
	}
	return ""
}

type MsgCreateTimeseriesResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTimeseriesResponse) Reset()         { *m = MsgCreateTimeseriesResponse{} }
func (m *MsgCreateTimeseriesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimeseriesResponse) ProtoMessage()    {}
func (*MsgCreateTimeseriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{1}
}
func (m *MsgCreateTimeseriesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimeseriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimeseriesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimeseriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimeseriesResponse.Merge(m, src)
}
func (m *MsgCreateTimeseriesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimeseriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimeseriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimeseriesResponse proto.InternalMessageInfo

func (m *MsgCreateTimeseriesResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTimeseries struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Signal   string `protobuf:"bytes,4,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (m *MsgUpdateTimeseries) Reset()         { *m = MsgUpdateTimeseries{} }
func (m *MsgUpdateTimeseries) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimeseries) ProtoMessage()    {}
func (*MsgUpdateTimeseries) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{2}
}
func (m *MsgUpdateTimeseries) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimeseries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimeseries.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimeseries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimeseries.Merge(m, src)
}
func (m *MsgUpdateTimeseries) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimeseries) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimeseries.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimeseries proto.InternalMessageInfo

func (m *MsgUpdateTimeseries) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTimeseries) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTimeseries) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MsgUpdateTimeseries) GetSignal() string {
	if m != nil {
		return m.Signal
	}
	return ""
}

type MsgUpdateTimeseriesResponse struct {
}

func (m *MsgUpdateTimeseriesResponse) Reset()         { *m = MsgUpdateTimeseriesResponse{} }
func (m *MsgUpdateTimeseriesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimeseriesResponse) ProtoMessage()    {}
func (*MsgUpdateTimeseriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{3}
}
func (m *MsgUpdateTimeseriesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimeseriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimeseriesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimeseriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimeseriesResponse.Merge(m, src)
}
func (m *MsgUpdateTimeseriesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimeseriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimeseriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimeseriesResponse proto.InternalMessageInfo

type MsgDeleteTimeseries struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTimeseries) Reset()         { *m = MsgDeleteTimeseries{} }
func (m *MsgDeleteTimeseries) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimeseries) ProtoMessage()    {}
func (*MsgDeleteTimeseries) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{4}
}
func (m *MsgDeleteTimeseries) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimeseries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimeseries.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimeseries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimeseries.Merge(m, src)
}
func (m *MsgDeleteTimeseries) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimeseries) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimeseries.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimeseries proto.InternalMessageInfo

func (m *MsgDeleteTimeseries) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTimeseries) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTimeseriesResponse struct {
}

func (m *MsgDeleteTimeseriesResponse) Reset()         { *m = MsgDeleteTimeseriesResponse{} }
func (m *MsgDeleteTimeseriesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimeseriesResponse) ProtoMessage()    {}
func (*MsgDeleteTimeseriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{5}
}
func (m *MsgDeleteTimeseriesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimeseriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimeseriesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimeseriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimeseriesResponse.Merge(m, src)
}
func (m *MsgDeleteTimeseriesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimeseriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimeseriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimeseriesResponse proto.InternalMessageInfo

type MsgCreateMeasure struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TimeseriesID string `protobuf:"bytes,2,opt,name=timeseriesID,proto3" json:"timeseriesID,omitempty"`
	Ts           string `protobuf:"bytes,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Value        string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *MsgCreateMeasure) Reset()         { *m = MsgCreateMeasure{} }
func (m *MsgCreateMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMeasure) ProtoMessage()    {}
func (*MsgCreateMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{6}
}
func (m *MsgCreateMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMeasure.Merge(m, src)
}
func (m *MsgCreateMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMeasure proto.InternalMessageInfo

func (m *MsgCreateMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMeasure) GetTimeseriesID() string {
	if m != nil {
		return m.TimeseriesID
	}
	return ""
}

func (m *MsgCreateMeasure) GetTs() string {
	if m != nil {
		return m.Ts
	}
	return ""
}

func (m *MsgCreateMeasure) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MsgCreateMeasureResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateMeasureResponse) Reset()         { *m = MsgCreateMeasureResponse{} }
func (m *MsgCreateMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMeasureResponse) ProtoMessage()    {}
func (*MsgCreateMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{7}
}
func (m *MsgCreateMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMeasureResponse.Merge(m, src)
}
func (m *MsgCreateMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMeasureResponse proto.InternalMessageInfo

func (m *MsgCreateMeasureResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateMeasure struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id           uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	TimeseriesID string `protobuf:"bytes,3,opt,name=timeseriesID,proto3" json:"timeseriesID,omitempty"`
	Ts           string `protobuf:"bytes,4,opt,name=ts,proto3" json:"ts,omitempty"`
	Value        string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *MsgUpdateMeasure) Reset()         { *m = MsgUpdateMeasure{} }
func (m *MsgUpdateMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMeasure) ProtoMessage()    {}
func (*MsgUpdateMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{8}
}
func (m *MsgUpdateMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMeasure.Merge(m, src)
}
func (m *MsgUpdateMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMeasure proto.InternalMessageInfo

func (m *MsgUpdateMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateMeasure) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateMeasure) GetTimeseriesID() string {
	if m != nil {
		return m.TimeseriesID
	}
	return ""
}

func (m *MsgUpdateMeasure) GetTs() string {
	if m != nil {
		return m.Ts
	}
	return ""
}

func (m *MsgUpdateMeasure) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MsgUpdateMeasureResponse struct {
}

func (m *MsgUpdateMeasureResponse) Reset()         { *m = MsgUpdateMeasureResponse{} }
func (m *MsgUpdateMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMeasureResponse) ProtoMessage()    {}
func (*MsgUpdateMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{9}
}
func (m *MsgUpdateMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMeasureResponse.Merge(m, src)
}
func (m *MsgUpdateMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMeasureResponse proto.InternalMessageInfo

type MsgDeleteMeasure struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteMeasure) Reset()         { *m = MsgDeleteMeasure{} }
func (m *MsgDeleteMeasure) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMeasure) ProtoMessage()    {}
func (*MsgDeleteMeasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{10}
}
func (m *MsgDeleteMeasure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMeasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMeasure.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMeasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMeasure.Merge(m, src)
}
func (m *MsgDeleteMeasure) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMeasure) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMeasure.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMeasure proto.InternalMessageInfo

func (m *MsgDeleteMeasure) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteMeasure) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteMeasureResponse struct {
}

func (m *MsgDeleteMeasureResponse) Reset()         { *m = MsgDeleteMeasureResponse{} }
func (m *MsgDeleteMeasureResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMeasureResponse) ProtoMessage()    {}
func (*MsgDeleteMeasureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa96754eefbf7dc, []int{11}
}
func (m *MsgDeleteMeasureResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMeasureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMeasureResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMeasureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMeasureResponse.Merge(m, src)
}
func (m *MsgDeleteMeasureResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMeasureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMeasureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMeasureResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateTimeseries)(nil), "supsidacdisaac.tsdb.tsdb.MsgCreateTimeseries")
	proto.RegisterType((*MsgCreateTimeseriesResponse)(nil), "supsidacdisaac.tsdb.tsdb.MsgCreateTimeseriesResponse")
	proto.RegisterType((*MsgUpdateTimeseries)(nil), "supsidacdisaac.tsdb.tsdb.MsgUpdateTimeseries")
	proto.RegisterType((*MsgUpdateTimeseriesResponse)(nil), "supsidacdisaac.tsdb.tsdb.MsgUpdateTimeseriesResponse")
	proto.RegisterType((*MsgDeleteTimeseries)(nil), "supsidacdisaac.tsdb.tsdb.MsgDeleteTimeseries")
	proto.RegisterType((*MsgDeleteTimeseriesResponse)(nil), "supsidacdisaac.tsdb.tsdb.MsgDeleteTimeseriesResponse")
	proto.RegisterType((*MsgCreateMeasure)(nil), "supsidacdisaac.tsdb.tsdb.MsgCreateMeasure")
	proto.RegisterType((*MsgCreateMeasureResponse)(nil), "supsidacdisaac.tsdb.tsdb.MsgCreateMeasureResponse")
	proto.RegisterType((*MsgUpdateMeasure)(nil), "supsidacdisaac.tsdb.tsdb.MsgUpdateMeasure")
	proto.RegisterType((*MsgUpdateMeasureResponse)(nil), "supsidacdisaac.tsdb.tsdb.MsgUpdateMeasureResponse")
	proto.RegisterType((*MsgDeleteMeasure)(nil), "supsidacdisaac.tsdb.tsdb.MsgDeleteMeasure")
	proto.RegisterType((*MsgDeleteMeasureResponse)(nil), "supsidacdisaac.tsdb.tsdb.MsgDeleteMeasureResponse")
}

func init() { proto.RegisterFile("tsdb/tx.proto", fileDescriptor_aaa96754eefbf7dc) }

var fileDescriptor_aaa96754eefbf7dc = []byte{
	// 495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0x4d, 0x8b, 0xd3, 0x40,
	0x18, 0xc7, 0x9b, 0xb4, 0x5d, 0x75, 0x70, 0xa5, 0x8c, 0x2f, 0x84, 0x88, 0x41, 0x72, 0x92, 0x42,
	0x52, 0x58, 0xf1, 0x20, 0x08, 0x82, 0xee, 0xc5, 0x43, 0x2f, 0x55, 0x2f, 0xde, 0xa6, 0xc9, 0x10,
	0x07, 0x92, 0x4e, 0xc8, 0x33, 0x59, 0xe2, 0x17, 0xf0, 0xec, 0xa7, 0x12, 0x8f, 0x7b, 0xf4, 0x28,
	0xed, 0x17, 0x91, 0xcc, 0x24, 0x71, 0x27, 0x2f, 0x6d, 0xd6, 0x4b, 0xcb, 0xcc, 0x3c, 0xf3, 0xff,
	0xff, 0xf2, 0xbc, 0x30, 0xe8, 0x5c, 0x40, 0xb8, 0x5d, 0x89, 0xc2, 0x4f, 0x33, 0x2e, 0x38, 0xb6,
	0x20, 0x4f, 0x81, 0x85, 0x24, 0x08, 0x19, 0x10, 0x12, 0xf8, 0xe5, 0xa9, 0xfc, 0xb1, 0x1f, 0xab,
	0x40, 0x96, 0x50, 0xa0, 0x19, 0xa3, 0xa0, 0x2e, 0xd8, 0x58, 0x6e, 0x27, 0x94, 0x40, 0x9e, 0x51,
	0xb5, 0xe7, 0x06, 0xe8, 0xe1, 0x1a, 0xa2, 0xf7, 0x19, 0x25, 0x82, 0x7e, 0x6a, 0x2e, 0x60, 0x0b,
	0xdd, 0x09, 0xca, 0x3d, 0x9e, 0x59, 0xc6, 0x73, 0xe3, 0xc5, 0xbd, 0x4d, 0xbd, 0xc4, 0x36, 0xba,
	0x1b, 0xf3, 0x80, 0x08, 0xc6, 0x77, 0x96, 0x29, 0x8f, 0x9a, 0x35, 0x7e, 0x82, 0xce, 0x80, 0x45,
	0x3b, 0x12, 0x5b, 0x53, 0x79, 0x52, 0xad, 0x5c, 0x0f, 0x3d, 0xed, 0x31, 0xd9, 0x50, 0x48, 0xf9,
	0x0e, 0x28, 0x7e, 0x80, 0x4c, 0x16, 0x4a, 0x9f, 0xd9, 0xc6, 0x64, 0xa1, 0x0b, 0x92, 0xe9, 0x73,
	0x1a, 0x8e, 0x65, 0x52, 0x02, 0x66, 0x2d, 0xa0, 0x31, 0x4e, 0x07, 0x19, 0x67, 0x1a, 0xe3, 0x33,
	0xc9, 0xd8, 0x36, 0xad, 0x19, 0xdd, 0xb7, 0x92, 0xe9, 0x92, 0xc6, 0xf4, 0xff, 0x98, 0x2a, 0xfd,
	0xb6, 0x40, 0xa3, 0x7f, 0x85, 0x16, 0x4d, 0x8a, 0xd6, 0xaa, 0x42, 0x47, 0xc4, 0x5d, 0x74, 0xff,
	0x5f, 0x75, 0x3f, 0x5c, 0x56, 0x85, 0xd0, 0xf6, 0x4a, 0x00, 0x01, 0xd5, 0xe7, 0x9b, 0x02, 0xf0,
	0x23, 0x34, 0xbf, 0x22, 0x71, 0x4e, 0xab, 0xef, 0x56, 0x0b, 0x77, 0x89, 0xac, 0xb6, 0xef, 0x60,
	0x5d, 0xbe, 0x1b, 0x12, 0x52, 0xe5, 0xe8, 0x34, 0x64, 0xbb, 0x2a, 0x6d, 0xe8, 0xe9, 0x20, 0xf4,
	0xac, 0x0b, 0x3d, 0xbf, 0x09, 0x6d, 0x4b, 0x68, 0x8d, 0xa3, 0x49, 0xe4, 0x1b, 0xc9, 0xa8, 0xf2,
	0x7c, 0x6b, 0xc6, 0x4a, 0x59, 0xbb, 0x5d, 0x2b, 0x5f, 0xfc, 0x9c, 0xa3, 0xe9, 0x1a, 0x22, 0x5c,
	0xa0, 0x45, 0x67, 0x5e, 0x3c, 0x7f, 0x68, 0x18, 0xfd, 0x9e, 0xce, 0xb7, 0x5f, 0xdd, 0x2a, 0xbc,
	0x29, 0x48, 0x81, 0x16, 0x9d, 0xa9, 0x38, 0xee, 0xdc, 0x0e, 0x3f, 0xe1, 0x3c, 0xd4, 0xfe, 0xa5,
	0x73, 0xa7, 0xf7, 0x8f, 0x3b, 0xb7, 0xc3, 0x4f, 0x38, 0x0f, 0x0d, 0x06, 0xe6, 0xe8, 0x5c, 0x9f,
	0x8a, 0xe5, 0x88, 0xdc, 0x55, 0xb1, 0xf6, 0xc5, 0xf8, 0xd8, 0x9b, 0x86, 0x7a, 0x87, 0x2f, 0x47,
	0xa4, 0x6c, 0x9c, 0x61, 0x6f, 0xc7, 0x96, 0x86, 0x7a, 0xbb, 0x2e, 0x47, 0x64, 0x6a, 0x9c, 0x61,
	0x6f, 0x23, 0xbf, 0xfb, 0xf8, 0x6b, 0xef, 0x18, 0xd7, 0x7b, 0xc7, 0xf8, 0xb3, 0x77, 0x8c, 0x1f,
	0x07, 0x67, 0x72, 0x7d, 0x70, 0x26, 0xbf, 0x0f, 0xce, 0xe4, 0xcb, 0xeb, 0x88, 0x89, 0xaf, 0xf9,
	0xd6, 0x0f, 0x78, 0xb2, 0x92, 0xba, 0x5e, 0x29, 0xec, 0x49, 0xe5, 0x55, 0xc0, 0x21, 0xe1, 0xe0,
	0x91, 0x34, 0x85, 0x95, 0x7c, 0x49, 0x0a, 0xf5, 0x27, 0xbe, 0xa5, 0x14, 0xb6, 0x67, 0xf2, 0x3d,
	0x79, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x4b, 0x43, 0x12, 0xa5, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateTimeseries(ctx context.Context, in *MsgCreateTimeseries, opts ...grpc.CallOption) (*MsgCreateTimeseriesResponse, error)
	UpdateTimeseries(ctx context.Context, in *MsgUpdateTimeseries, opts ...grpc.CallOption) (*MsgUpdateTimeseriesResponse, error)
	DeleteTimeseries(ctx context.Context, in *MsgDeleteTimeseries, opts ...grpc.CallOption) (*MsgDeleteTimeseriesResponse, error)
	CreateMeasure(ctx context.Context, in *MsgCreateMeasure, opts ...grpc.CallOption) (*MsgCreateMeasureResponse, error)
	UpdateMeasure(ctx context.Context, in *MsgUpdateMeasure, opts ...grpc.CallOption) (*MsgUpdateMeasureResponse, error)
	DeleteMeasure(ctx context.Context, in *MsgDeleteMeasure, opts ...grpc.CallOption) (*MsgDeleteMeasureResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateTimeseries(ctx context.Context, in *MsgCreateTimeseries, opts ...grpc.CallOption) (*MsgCreateTimeseriesResponse, error) {
	out := new(MsgCreateTimeseriesResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.tsdb.tsdb.Msg/CreateTimeseries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTimeseries(ctx context.Context, in *MsgUpdateTimeseries, opts ...grpc.CallOption) (*MsgUpdateTimeseriesResponse, error) {
	out := new(MsgUpdateTimeseriesResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.tsdb.tsdb.Msg/UpdateTimeseries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTimeseries(ctx context.Context, in *MsgDeleteTimeseries, opts ...grpc.CallOption) (*MsgDeleteTimeseriesResponse, error) {
	out := new(MsgDeleteTimeseriesResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.tsdb.tsdb.Msg/DeleteTimeseries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMeasure(ctx context.Context, in *MsgCreateMeasure, opts ...grpc.CallOption) (*MsgCreateMeasureResponse, error) {
	out := new(MsgCreateMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.tsdb.tsdb.Msg/CreateMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMeasure(ctx context.Context, in *MsgUpdateMeasure, opts ...grpc.CallOption) (*MsgUpdateMeasureResponse, error) {
	out := new(MsgUpdateMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.tsdb.tsdb.Msg/UpdateMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteMeasure(ctx context.Context, in *MsgDeleteMeasure, opts ...grpc.CallOption) (*MsgDeleteMeasureResponse, error) {
	out := new(MsgDeleteMeasureResponse)
	err := c.cc.Invoke(ctx, "/supsidacdisaac.tsdb.tsdb.Msg/DeleteMeasure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateTimeseries(context.Context, *MsgCreateTimeseries) (*MsgCreateTimeseriesResponse, error)
	UpdateTimeseries(context.Context, *MsgUpdateTimeseries) (*MsgUpdateTimeseriesResponse, error)
	DeleteTimeseries(context.Context, *MsgDeleteTimeseries) (*MsgDeleteTimeseriesResponse, error)
	CreateMeasure(context.Context, *MsgCreateMeasure) (*MsgCreateMeasureResponse, error)
	UpdateMeasure(context.Context, *MsgUpdateMeasure) (*MsgUpdateMeasureResponse, error)
	DeleteMeasure(context.Context, *MsgDeleteMeasure) (*MsgDeleteMeasureResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateTimeseries(ctx context.Context, req *MsgCreateTimeseries) (*MsgCreateTimeseriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTimeseries not implemented")
}
func (*UnimplementedMsgServer) UpdateTimeseries(ctx context.Context, req *MsgUpdateTimeseries) (*MsgUpdateTimeseriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTimeseries not implemented")
}
func (*UnimplementedMsgServer) DeleteTimeseries(ctx context.Context, req *MsgDeleteTimeseries) (*MsgDeleteTimeseriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTimeseries not implemented")
}
func (*UnimplementedMsgServer) CreateMeasure(ctx context.Context, req *MsgCreateMeasure) (*MsgCreateMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMeasure not implemented")
}
func (*UnimplementedMsgServer) UpdateMeasure(ctx context.Context, req *MsgUpdateMeasure) (*MsgUpdateMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMeasure not implemented")
}
func (*UnimplementedMsgServer) DeleteMeasure(ctx context.Context, req *MsgDeleteMeasure) (*MsgDeleteMeasureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMeasure not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateTimeseries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTimeseries)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTimeseries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.tsdb.tsdb.Msg/CreateTimeseries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTimeseries(ctx, req.(*MsgCreateTimeseries))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTimeseries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTimeseries)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTimeseries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.tsdb.tsdb.Msg/UpdateTimeseries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTimeseries(ctx, req.(*MsgUpdateTimeseries))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTimeseries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTimeseries)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTimeseries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.tsdb.tsdb.Msg/DeleteTimeseries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTimeseries(ctx, req.(*MsgDeleteTimeseries))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.tsdb.tsdb.Msg/CreateMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMeasure(ctx, req.(*MsgCreateMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.tsdb.tsdb.Msg/UpdateMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMeasure(ctx, req.(*MsgUpdateMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteMeasure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteMeasure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteMeasure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supsidacdisaac.tsdb.tsdb.Msg/DeleteMeasure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteMeasure(ctx, req.(*MsgDeleteMeasure))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "supsidacdisaac.tsdb.tsdb.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTimeseries",
			Handler:    _Msg_CreateTimeseries_Handler,
		},
		{
			MethodName: "UpdateTimeseries",
			Handler:    _Msg_UpdateTimeseries_Handler,
		},
		{
			MethodName: "DeleteTimeseries",
			Handler:    _Msg_DeleteTimeseries_Handler,
		},
		{
			MethodName: "CreateMeasure",
			Handler:    _Msg_CreateMeasure_Handler,
		},
		{
			MethodName: "UpdateMeasure",
			Handler:    _Msg_UpdateMeasure_Handler,
		},
		{
			MethodName: "DeleteMeasure",
			Handler:    _Msg_DeleteMeasure_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tsdb/tx.proto",
}

func (m *MsgCreateTimeseries) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimeseries) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimeseries) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signal) > 0 {
		i -= len(m.Signal)
		copy(dAtA[i:], m.Signal)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signal)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimeseriesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimeseriesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimeseriesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimeseries) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimeseries) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimeseries) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signal) > 0 {
		i -= len(m.Signal)
		copy(dAtA[i:], m.Signal)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signal)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimeseriesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimeseriesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimeseriesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimeseries) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimeseries) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimeseries) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimeseriesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimeseriesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimeseriesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Ts) > 0 {
		i -= len(m.Ts)
		copy(dAtA[i:], m.Ts)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Ts)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TimeseriesID) > 0 {
		i -= len(m.TimeseriesID)
		copy(dAtA[i:], m.TimeseriesID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TimeseriesID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Ts) > 0 {
		i -= len(m.Ts)
		copy(dAtA[i:], m.Ts)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Ts)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TimeseriesID) > 0 {
		i -= len(m.TimeseriesID)
		copy(dAtA[i:], m.TimeseriesID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TimeseriesID)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMeasure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMeasure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMeasure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMeasureResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMeasureResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMeasureResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateTimeseries) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signal)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTimeseriesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTimeseries) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signal)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTimeseriesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTimeseries) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTimeseriesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TimeseriesID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Ts)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.TimeseriesID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Ts)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteMeasure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteMeasureResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateTimeseries) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimeseries: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimeseries: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimeseriesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimeseriesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimeseriesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimeseries) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimeseries: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimeseries: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signal", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signal = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimeseriesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimeseriesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimeseriesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimeseries) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimeseries: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimeseries: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimeseriesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimeseriesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimeseriesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeseriesID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TimeseriesID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ts = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeseriesID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TimeseriesID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ts = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMeasure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMeasure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMeasure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMeasureResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMeasureResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMeasureResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
